<?php
/**
 * TimeZoneId
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Telgorithm Messaging API
 *
 * In our APIs we use a rate limit. The rate limit is the maximum number of calls you want to allow in a particular time interval. Setting rate limits helps us to provide the best performance of integration between your software and Telgorithm by preventing other clients from affecting you.    Despite the fact that there is no accepted standard for HTTP rate-limiting headers, we were guided by [**IETF draft: RateLimit Fields for HTTP**](https://www.ietf.org/archive/id/draft-ietf-httpapi-ratelimit-headers-05.html).      We use these HTTP headers on APIs endpoints:    ``` RateLimit-Limit: containing the requests quota in the time window; RateLimit-Remaining: containing a non-negative integer which represents the remaining requests quota in the current time window; RateLimit-Reset: amount of seconds when the full quota will be available; ```  Default quotas:  | Endpoint                             | Default            | | ------------------------------------ | ------------------ | | POST `messaging/v1/OutboundMessages` | 100 per 10 seconds       | | POST `messaging/v1/Phones`           | 120 per hour        | | All REST GET endpoints               | 100 per 10 seconds | | REST non-GET endpoints               | 100 per 10 seconds  |  When quota is exceeded, server do not serve the request replying instead with a 429 HTTP status code.    If you need a bigger quota [contact us](mailto:support@telgorithm.com).
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * TimeZoneId Class Doc Comment
 *
 * @category Class
 * @description &lt;p&gt;Possible values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;America/Juneau&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;America/Los_Angeles&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;America/Denver&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;America/Chicago&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;America/New_York&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-12:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-11:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-10:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-09:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-08:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-07:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-06:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-05:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-04:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-03:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-02:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC-01:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+00:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+01:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+02:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+03:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+04:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+05:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+06:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+07:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+08:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+09:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+10:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+11:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+12:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+13:00&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;UTC+14:00&lt;/b&gt;&lt;/li&gt; &lt;/ul&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TimeZoneId
{
    /**
     * Possible values of this enum
     */
    public const AMERICA_JUNEAU = 'America/Juneau';

    public const AMERICA_LOS_ANGELES = 'America/Los_Angeles';

    public const AMERICA_DENVER = 'America/Denver';

    public const AMERICA_CHICAGO = 'America/Chicago';

    public const AMERICA_NEW_YORK = 'America/New_York';

    public const UTC_1200 = 'UTC-12:00';

    public const UTC_1100 = 'UTC-11:00';

    public const UTC_1000 = 'UTC-10:00';

    public const UTC_0900 = 'UTC-09:00';

    public const UTC_0800 = 'UTC-08:00';

    public const UTC_0700 = 'UTC-07:00';

    public const UTC_0600 = 'UTC-06:00';

    public const UTC_0500 = 'UTC-05:00';

    public const UTC_0400 = 'UTC-04:00';

    public const UTC_0300 = 'UTC-03:00';

    public const UTC_0200 = 'UTC-02:00';

    public const UTC_0100 = 'UTC-01:00';

    public const UTC0000 = 'UTC+00:00';

    public const UTC0100 = 'UTC+01:00';

    public const UTC0200 = 'UTC+02:00';

    public const UTC0300 = 'UTC+03:00';

    public const UTC0400 = 'UTC+04:00';

    public const UTC0500 = 'UTC+05:00';

    public const UTC0600 = 'UTC+06:00';

    public const UTC0700 = 'UTC+07:00';

    public const UTC0800 = 'UTC+08:00';

    public const UTC0900 = 'UTC+09:00';

    public const UTC1000 = 'UTC+10:00';

    public const UTC1100 = 'UTC+11:00';

    public const UTC1200 = 'UTC+12:00';

    public const UTC1300 = 'UTC+13:00';

    public const UTC1400 = 'UTC+14:00';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AMERICA_JUNEAU,
            self::AMERICA_LOS_ANGELES,
            self::AMERICA_DENVER,
            self::AMERICA_CHICAGO,
            self::AMERICA_NEW_YORK,
            self::UTC_1200,
            self::UTC_1100,
            self::UTC_1000,
            self::UTC_0900,
            self::UTC_0800,
            self::UTC_0700,
            self::UTC_0600,
            self::UTC_0500,
            self::UTC_0400,
            self::UTC_0300,
            self::UTC_0200,
            self::UTC_0100,
            self::UTC0000,
            self::UTC0100,
            self::UTC0200,
            self::UTC0300,
            self::UTC0400,
            self::UTC0500,
            self::UTC0600,
            self::UTC0700,
            self::UTC0800,
            self::UTC0900,
            self::UTC1000,
            self::UTC1100,
            self::UTC1200,
            self::UTC1300,
            self::UTC1400
        ];
    }
}


